page_content='Randomize the declared positions of local variable entities that can be named within a function, while limiting their positions to before the variable's first use and within its scope.' metadata={'repo': 'ReactiveX/RxJava', 'path': 'src/main/java/io/reactivex/internal/operators/observable/ObservableReplay.java', 'func_name': 'ObservableReplay.observeOn', 'language': 'java', 'docstring': 'Child Observers will observe the events of the ConnectableObservable on the\nspecified scheduler.\n@param <T> the value type\n@param co the connectable observable instance\n@param scheduler the target scheduler\n@return the new ConnectableObservable instance', 'url': 'https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/operators/observable/ObservableReplay.java#L74-L77', 'obfus_level': 'tag1_2', 'obfus_desc': 'Named local variable entity declaration position randomization.', 'original_code': 'public static <T> ConnectableObservable<T> observeOn(final ConnectableObservable<T> co, final Scheduler scheduler) {\n        final Observable<T> observable = co.observeOn(scheduler);\n        return RxJavaPlugins.onAssembly(new Replay<T>(co, observable));\n    }', 'obfuscated_code': 'public static < T > ConnectableObservable < T > observeOn ( final ConnectableObservable < T > co , final Scheduler scheduler ) { final Observable < T > observable ; observable = co.observeOn ( scheduler ) ; return RxJavaPlugins.onAssembly ( new Replay < T > ( co , observable ) ) ; }', 'diff': '[local_variable] observable\n  - type: Observable<T>\n  - modifiers: final\n  - scope: Class Example -> Function observeOn\n  - declared at line: 4: final Observable<T> observable = co.observeOn(scheduler);\n    →obfuscated to line 4: final Observable<T> observable;\n  - first init at line: 4: final Observable<T> observable = co.observeOn(scheduler);\n    →obfuscated to line 5: observable = co.observeOn(scheduler);\n  - first used at line: 5: return RxJavaPlugins.onAssembly(new Replay<T>(co, observable));\n    →obfuscated to line 6: return RxJavaPlugins.onAssembly(new Replay<T>(co, observable));\n'}